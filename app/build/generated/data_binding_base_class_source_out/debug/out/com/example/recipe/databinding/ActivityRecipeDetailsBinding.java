// Generated by view binder compiler. Do not edit!
package com.example.recipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recipe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button editButton;

  @NonNull
  public final TextView recipeDescriptionTextView;

  @NonNull
  public final LinearLayout recipeDetailsLayout;

  @NonNull
  public final TextView recipeNameTextView;

  @NonNull
  public final TextView recipePrepTimeTextView;

  @NonNull
  public final TextView recipeServingSizeTextView;

  private ActivityRecipeDetailsBinding(@NonNull RelativeLayout rootView, @NonNull Button backButton,
      @NonNull Button editButton, @NonNull TextView recipeDescriptionTextView,
      @NonNull LinearLayout recipeDetailsLayout, @NonNull TextView recipeNameTextView,
      @NonNull TextView recipePrepTimeTextView, @NonNull TextView recipeServingSizeTextView) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.editButton = editButton;
    this.recipeDescriptionTextView = recipeDescriptionTextView;
    this.recipeDetailsLayout = recipeDetailsLayout;
    this.recipeNameTextView = recipeNameTextView;
    this.recipePrepTimeTextView = recipePrepTimeTextView;
    this.recipeServingSizeTextView = recipeServingSizeTextView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.recipeDescriptionTextView;
      TextView recipeDescriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.recipeDetailsLayout;
      LinearLayout recipeDetailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (recipeDetailsLayout == null) {
        break missingId;
      }

      id = R.id.recipeNameTextView;
      TextView recipeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameTextView == null) {
        break missingId;
      }

      id = R.id.recipePrepTimeTextView;
      TextView recipePrepTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipePrepTimeTextView == null) {
        break missingId;
      }

      id = R.id.recipeServingSizeTextView;
      TextView recipeServingSizeTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeServingSizeTextView == null) {
        break missingId;
      }

      return new ActivityRecipeDetailsBinding((RelativeLayout) rootView, backButton, editButton,
          recipeDescriptionTextView, recipeDetailsLayout, recipeNameTextView,
          recipePrepTimeTextView, recipeServingSizeTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
